29/05/2020
###############################Virtual Machine creation Requirements:###########################################
1. Resource group
2. Virtual Network
3. Network Security Groups
4. Network Interface 
5. Public IP (one for each instance)
6. Create disk (one for each instance)

#####################HOW TO CONNECT REMOTE DESKTOP FROM POWERSHELL #########################################

https://www.assistanz.com/access-azure-windows-vm-through-powershell/  ----> Complete Document

300 RDP 3389 TCP Any Any Allow
310 WinRM_5986 5986 TCP Any Any Allow
320 WinRM_http 5985 Any Any Any

On WINDOWS Run Terminal using win+R:
-----------------------------------------------------
mstsc -v <ipaddresss>

Modify Disk volume on remote desktop.
Disable NetWorkService on remote desktop in Windows Security of Domain, Private, Public (turn off)

On Remote desktop Command Prompt
------------------------------------------------------
1. >> powershell.exe
2. >> winrm quickconfig   
3. >> get-service winrm
4. >> start-service winrm (Use this only winRm service is not running)

On Local Windows POWERSHELL:
--------------------------------------------------
1. >> Get-Service WinRM
2. >> WinRM qc 
3. >> Enter-PSSession '<IP Address>' -Credential:'<username>'...                                                                                                                               
4. >> Enable-PSRemoting   
***NOTE: If you get an Error like change network. Then Change your wifi network to private.                                                                                                                                                                      
5. >> Set-Item WSMan:\localhost\Client\TrustedHosts -value <IP Address>
6. >> Enter-PSSession -ComputerName <IP Address> -Credential "<username>"                                                                                                                          
                                                  
For Testing the connection execute these commands from Local Win Powershell only after it is connected.
1. New-Item F:\test.txt
2. Set-Content F:\test.txt 'Welcome to Remote Desktop'
3. Get-Content F:\test.txt
Now go and check in Remote desktop you will see a file with test.txt

##################################### END OF VIRTUAL MACHINE #############################################################

30/05/2020
########################################## VPN and VM Creation ############################################################
VPN creation Requirements:
1. Resource group
2. Virtual Network
 a. Subnet.
 b. Gatewaysubnet  (Goto attributes and select Subnet and click on Gatewaysubnet)
3. Public IP
4. Virtual Network Gateway

Insert certificate in powershell:
ROOT CERT:
$cert=New-SelfSignedCertificate -Type Custom -KeySpec Signature -Subject "ROOTCERT" -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation 'Cert:\CurrentUser\My' -KeyUsageProperty Sign -KeyUsage CertSign

CLIENT CERT:
New-SelfSignedCertificate -Type Custom -DnsName CLIENT -KeySpec Signature -Subject "CN=ClientCERT" -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation 'Cert:\CurrentUser\My' -Signer $cert -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.2")

http://www.rebeladmin.com/2018/07/step-step-guide-azure-point-site-vpn/

https://www.c-sharpcorner.com/article/step-by-step-demo-of-creating-a-point-to-site-vpn-connection2/

https://www.assistanz.com/steps-to-create-point-to-site-vpn-using-azure-portal/

1 Create Resource Group -- Name - VPN (Location East US)
== Virtual Network====
2 Virtual network (name -Vpn-Vnet  address prefix: 172.16.0.0/16)
3 Subnet (172.16.1.0/24)
4 Gateway Subnet (172.16.0.0/24)

=====Public IP====
Ip address should be dynamic

===== Virtual Network Gateway=======================================================

*****Make sure GatewaySubnet was created in virtual network or not . if not creaate before creating virtual network gateway
We are supposed to provide following details:

Name
Location ( location should be same virtual network)
Gateway Tpye : VPN
VPN TYpe: Route Based
SKU: Choose any one
Generation: generation 1

Virtual network : choose correct virtual network where gatewaysubnet was created

Public IP: Choose existing one and verify whether IPname was correctly loaded or not.

Click on review+Create

============================================================================================

Create Root and Client Certificates for the sake of VPN connectivity from our local to Azure virtula network
============================================================================================================

------ROOTcert --------
$cert=New-SelfSignedCertificate -Type Custom -KeySpec Signature -Subject "ROOTCERT" -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation 'Cert:\CurrentUser\My' -KeyUsageProperty Sign -KeyUsage CertSign
-----Client Cert-------
New-SelfSignedCertificate -Type Custom -DnsName CLIENT -KeySpec Signature -Subject "CN=ClientCERT" -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation 'Cert:\CurrentUser\My' -Signer $cert -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.2")

Press Windows+R (run prompt)
type MMC --> enter key

1) one Microsoft management console opens follow below instructions
File-->Add/remove snap in --> choose certificates -->add --> choose current user/machine-->OK

2) Expand certificates-->personal -- right hand side look for the root and client certificates are present or not. make sure certs are available before proceed
3) Right click on RootCert --> alltasks-->export -->next-->next(no private key export choose second option)-->choose base64 encode-->choose the certifcate path to save the cert(name --Root)-->finish
4) Right click on Client Cert -->All tasks --> export--> next->choose yes, with privatekey --> next (do not modify any options)--> select password cehck box --> enter password (ex:India@123)--> choose the path to save .pfx-->finish

================================================================================================================
Open Azure port and open Virtual network gateway

1) In the left hand side menu choose --> Point-to-site configuration
2) click on configuration in right hand side and then enter below details:

  Address pool : 10.0.0.0/24 ( this IP should not be overlapped)
  Choose Tunnel type : IKEV2 and SSTP(SSL)
  ======================
  
  before enter certificate details we need copy the certificate code with below instructions
  right click on root.cer --> open with notepad /notepad++ --> copy code expect ----begin certificate and --- End certifcate --> make sure no space in between entire code --> copy the code
  ======================
  switch to VPN gateway and paste certificate code which copied earlier
  
  Name: root value : copied certificate code
  Click on Save and wait for few mins until complete
  
  ONCE COMPLETE CLICK ON DOWNLOAD VPN CLIENT --> ONCE DOWNLOAD COMPLETE --> EXTRACT IT AND COPY Windowsamd64.EXE INTO CERTIFICATE FOLDER --> INSTALL VPN CLIENT.EXE 
  
  VERIFY VPN CONNECTED OR NOT. IF NOT CONNECTED PLEASE CROSS VERIFY CERTIFICATE DETAILS
  
================================
  
  Provions VM with pulic IP as NONE --> One VM created then copy private IP and verify RDP
  
=========================VPN validation complete=================================================================
##################################### END OF VPN AND VM CREATION ######################################################## 

01/06/2020

Chocolatey INSTALL
>> Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

To use Azure PowerShell in PowerShell 5.1 on Windows:

Update to Windows PowerShell 5.1. If you're on Windows 10 version 1607 or higher, you already have PowerShell 5.1 installed.
Install .NET Framework 4.7.2 or later.
Make sure you have the latest version of PowerShellGet. Run Install-Module -Name PowerShellGet -Force.

>> Install-Module -Name PowerShellGet -Force
>> Install-Module -Name Az   -------> To install Az module (AzureRM previous name)
>> import-module az -Verbose -Force

############################################################################################################################

02/06/2020

POWERSHELL COMMANDS
--------------------------
Get-Moudle cmdlet is used for getting all the modules in powershell
Import-Module Az is used getting 'Az' module
>> Import-Module az   ---> to install Az module
>> Get-Module
Azure Account Login-Mechanism:
-----------------------------
To connect azure portal from powershell use below cmdlet
>> Connect-AzAccount   ---> To login into Azure account

https://docs.atomicscope.com/docs/creating-service-principal  ---> Complete Document

Service Principal:
------------------
A Service Principal is an application within Azure Active Directory, which is authorized to access resources or resource group in Azure. ... 
You can assign permissions to the service principal that are different than your own Azure account permissions.
#1 Login thru service principal to azure portal using power shell *****while creating service principle role will be contributor
>> $sp=New-AzADServicePrincipal -DisplayName "RAJA"
>> $sp
<output>
Secret                : System.Security.SecureString
ServicePrincipalNames : {77cc8ded-d210-424f-a250-13ec215aec78, http://RAJA}
ApplicationId         : 77cc8ded-d210-424f-a250-13ec215aec78
ObjectType            : ServicePrincipal
DisplayName           : RAJA
Id                    : 8b0c5f3f-c556-493c-8003-08a5739b3ef6
Type                  :


#2 converting secure string to unsecure string
>> $unsecure=ConvertFrom-SecureString -SecureString $sp.Secret  

#3 converting secure string to binary string
>> $binarySTR=[System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($sp.Secret)
>> $binarySTR
2464439934856

#4 converting binary string to pointer for real password
>> $password=[System.Runtime.InteropServices.Marshal]::PtrToStringAuto($binarySTR)
>> $password
f4b5b5f2-56a2-4c62-8ead-250c95f42852

#5 convert the password to secure string again 
>> $securepassword=ConvertTo-SecureString $password -AsPlainText -Force

#6 Creating credentials
>> $creds=New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList ($sp.ApplicationId, $securepassword)
>> $creds

UserName                                                 Password
--------                                                 --------
77cc8ded-d210-424f-a250-13ec215aec78 System.Security.SecureString

#7 Getting the tenant id
>> $tenant=(Get-AzContext).Tenant.Id
>> $tenant
8472dafb-f62e-4879-b123-1e7d871ef9ab

#8 Getting the subscription id
>> $subscriptionid=(Get-AzContext).Subscription.Id
>> $subscriptionid
4b32eb0d-2356-47e9-a8db-088b3d2ac170

#9 connect to azure account
>> Connect-AzAccount -ServicePrincipal -Credential $creds -Tenant $tenant -Subscription $subscriptionid

Account                              SubscriptionName TenantId                             Environment
-------                              ---------------- --------                             -----------
77cc8ded-d210-424f-a250-13ec215aec78 Free Trial       8472dafb-f62e-4879-b123-1e7d871ef9ab AzureCloud

#10 Logout from azure account
>>> Logout-AzAccount

03/06/2020

#declare variables
$resourcegroup="RG800"
$location="southcentralus"
$vnetname="vnet800"
$addressprefix="172.16.0.0/16"
$subnetname="Subnet1"
$Subnetaddressprefix="172.16.1.0/24"
$vmName="VM"


#create resource group
$rg=new-azresourcegroup -name $resourcegroup -location $location

#create virtual network
$vnet=New-AzVirtualNetwork -name $vnetname -ResourceGroupName $resourcegroup -location $location -addressprefix $addressprefix -force -verbose

#create subnet for existing virtul network
$subnet=add-AzVirtualNetworkSubnetConfig -Name $subnetname -AddressPrefix $Subnetaddressprefix -virtualNetwork $vnet

#adding gateway subnet
$gwsubnet=add-azvirtualnetworksubnetconfig -name "GatewaySubnet" -AddressPrefix "172.16.0.0/24" -virtualNetwork $vnet
#update subnet into existing virtual network
$vnet | set-azvirtualnetwork 

#create virtual machine
new-azvm -ResourceGroupName $resourcegroup -Location $location -Name $vmName -VirtualNetworkName $vnetname -SubnetName $subnetname  -AsJob
-----------------------------------------------------
Connect-AzAccount 

Get-AzADServicePrincipal -DisplayName "RAJA" -Verbose  #getting ServicePrincipal

$user='raja'
$pwd='Password@123'| ConvertTo-SecureString -Force -AsPlainText
$cred=New-Object PSCredential($user,$pwd)

$rgname="RAJA"
$locname="eastus"
$vnetname="RAJAnet"
$addprefix="10.1.0.0/16"
$subnetname="RAJAsubnet-1"
$subnetaddprefix="10.1.1.0/24"
$vmname="RAJAVM"

$rgroup=New-AzResourceGroup -Name $rgname -Location $locname -Force -Verbose

$virtualnw=New-AzVirtualNetwork -Name $vnetname -ResourceGroupName $rgname -Location $locname -AddressPrefix $addprefix -Force -Verbose

$sub=Add-AzVirtualNetworkSubnetConfig -Name $subnetname -VirtualNetwork $virtualnw -AddressPrefix $subnetaddprefix

$gatewaysub=Add-AzVirtualNetworkSubnetConfig -Name "GatewaySubnet" -VirtualNetwork $virtualnw -AddressPrefix 10.0.2.0/24 

$virtualnw |Set-AzVirtualNetwork


New-AzVM -Name $vmname -ResourceGroupName $rgname -Location $locname -VirtualNetworkName $vnetname -SubnetName $subnetname -AsJob -Credential $cred

Remove-AzResource -ResourceGroupName $rgname -resorcetype $vmname -Force -verbose

Get-AzResource | Remove-AzResource -Force -verbose#to wipe all resourcegroups
Get-AzResource -ResourceGroupName $rgname| Remove-AzResource -Force -verbose #to wipe specific Resource group

Get-AzResourceGroup -Name $rgname 
--------------------------------------------------------------------------------------------

04/06/2020
************ IMP CMD
>> New-NetFirewallRule –DisplayName "Allow ICMPv4-In" –Protocol ICMPv4

VM1
Virtual network/subnet: Vnet1/Subnet-1
NIC Public IP: 52.186.156.91
NIC Private IP: 10.1.1.4

VM2
Virtual network/subnet: Vnet2/subnet-2
NIC Public IP: 13.82.147.249
NIC Private IP: 10.2.1.4

ping 13.82.147.249
ping 52.186.156.91

Install-Module -Name Az
import-module az -Verbose -Force
Get-Module

Connect-AzAccount 

Get-AzADServicePrincipal -DisplayName "RAJA" -Verbose  #getting ServicePrincipal

Connect-AzAccount 
Get-AzADServicePrincipal -DisplayName "RAJA" -Verbose  #getting ServicePrincipal
$user='raja'
$pwd='Password@123'| ConvertTo-SecureString -Force -AsPlainText
$cred=New-Object PSCredential($user,$pwd)

$rgname="RAJA"
$locname="eastus"

$vnetname1="RAJAnet1"
$addprefix1="10.1.0.0/16"
$subnetname1="subnet-1"
$subnetaddprefix1="10.1.1.0/24"
$vmname1="RAJAVM1"

$vnetname2="RAJAnet2"
$addprefix2="10.2.0.0/16"
$subnetname2="subnet-2"
$subnetaddprefix2="10.2.1.0/24"
$vmname2="RAJAVM2"

$rgroup=New-AzResourceGroup -Name $rgname -Location $locname -Force -Verbose

$virtualnw1=New-AzVirtualNetwork -Name $vnetname1 -ResourceGroupName $rgname -Location $locname -AddressPrefix $addprefix1 -Force -Verbose
$sub1=Add-AzVirtualNetworkSubnetConfig -Name $subnetname1 -VirtualNetwork $virtualnw1 -AddressPrefix $subnetaddprefix1
#$gatewaysub=Add-AzVirtualNetworkSubnetConfig -Name "GatewaySubnet" -VirtualNetwork $virtualnw1-AddressPrefix 10.0.1.0/24 
$virtualnw1 |Set-AzVirtualNetwork

$virtualnw2=New-AzVirtualNetwork -Name $vnetname2 -ResourceGroupName $rgname -Location $locname -AddressPrefix $addprefix2 -Force -Verbose
$sub1=Add-AzVirtualNetworkSubnetConfig -Name $subnetname2 -VirtualNetwork $virtualnw2 -AddressPrefix $subnetaddprefix2
#$gatewaysub=Add-AzVirtualNetworkSubnetConfig -Name "GatewaySubnet" -VirtualNetwork $virtualnw2 -AddressPrefix 10.0.1.0/24 
$virtualnw2 |Set-AzVirtualNetwork

Add-AzVirtualNetworkPeering -Name $vnetname1-to-vnetname2 -VirtualNetwork $virtualnw1 -RemoteVirtualNetworkId $virtualnw2.Id
Add-AzVirtualNetworkPeering -Name $vnetname2-to-vnetname1 -VirtualNetwork $virtualnw2 -RemoteVirtualNetworkId $virtualnw1.Id

New-AzVM -Name $vmname1 -ResourceGroupName $rgname -Location $locname -VirtualNetworkName $vnetname1 -SubnetName $subnetname1 -AsJob -Credential $cred
New-AzVM -Name $vmname2 -ResourceGroupName $rgname -Location $locname -VirtualNetworkName $vnetname2 -SubnetName $subnetname2 -AsJob -Credential $cred

Remove-AzResource -ResourceGroupName $rgname -resorcetype $vmname -Force -verbose

Get-AzResource | Remove-AzResource -Force -verbose#to wipe all resourcegroups
Get-AzResource -ResourceGroupName $rgname| Remove-AzResource -Force -verbose #to wipe specific Resource group

Get-AzResourceGroup -Name $rgname 

---------------------------------------------------------------------------------------------------------

APPLICATION GATEWAY

set-AzVMExtension -ResourceGroupName "APP" -ExtensionName IIS -VMName VM-front -Publisher microsoft.compute -ExtensionType CustomScriptExtension -TypeHandlerVersion 1.4 -SettingString '{"commandToExecute": "powershell add-windowsfeature web-server; powershell add-content -path \"C:\\inetpub\\wwwroot\\default.htm\" -value $($env:Computername)"}' -Location eastus
set-AzVMExtension -ResourceGroupName "APP" -ExtensionName IIS -VMName BACK-VM-2 -Publisher microsoft.compute -ExtensionType CustomScriptExtension -TypeHandlerVersion 1.4 -SettingString '{"commandToExecute": "powershell add-windowsfeature web-server; powershell add-content -path \"C:\\inetpub\\wwwroot\\default.htm\" -value $($env:Computername)"}' -Location eastus

STEPS FOR APPLICATION GATEWAY:
1. ResourceGroup
2. VIrtual Network
  Subnet-1=FrontEnd
  Subnet-2=Backend
3. Public IP 
4. Virtual Machines --2 or VMSS or APP Services
3. Application Gateway
  
  Configuration
   Add Route Table

6. Cloud Shell open and add storage
7. Run Azextension command with VM and Resource name. (Run commands = noof vms)  
set-AzVMExtension -ResourceGroupName "APP" -ExtensionName IIS -VMName VM-front -Publisher microsoft.compute -ExtensionType CustomScriptExtension -TypeHandlerVersion 1.4 -SettingString '{"commandToExecute": "powershell add-windowsfeature web-server; powershell add-content -path \"C:\\inetpub\\wwwroot\\default.htm\" -value $($env:Computername)"}' -Location eastus
set-AzVMExtension -ResourceGroupName "APP" -ExtensionName IIS -VMName BACK-VM-2 -Publisher microsoft.compute -ExtensionType CustomScriptExtension -TypeHandlerVersion 1.4 -SettingString '{"commandToExecute": "powershell add-windowsfeature web-server; powershell add-content -path \"C:\\inetpub\\wwwroot\\default.htm\" -value $($env:Computername)"}' -Location eastus

-----------------------------------------------------------------------------------------------------------
10/06/2020
Install-WindowsFeature -Name Web-server -IncludeManagementTools -Verbose
Remove-Item C:\inetpub\wwwroot\iisstart.htm -Force -Recurse -Verbose
Add-Content -Path "C:\inetpub\wwwroot\iisstart.htm" -Value $("Hello LoadBalancer Node " + $env:COMPUTERNAME)

1. Resource Group
2. Virtual Network
     Subnet
3. Network Security Group
4. OA
5. Load Balancer
6. VM's


--------------------------------------------------------------------------------------------------------------







