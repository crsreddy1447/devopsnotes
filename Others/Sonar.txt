App services
Sonar Scanner
commands used in pipeline

Quality Gates
A quality gate is the best way to enforce a quality policy in your organization.
Quality Gates can be defined as a set of threshold measures set on your project. Few conditions that can be in included are listed below.
1.Code Coverage > certain value
2.Number of Blocker issues >certain value
3.Security Rating / Unit Test Pass Rate etc..

Steps: 
Begin:::
The begin step is executed when you add the begin command line argument. It hooks into the MSBuild pipeline, downloads SonarQube quality profiles and settings and prepares your project for the analysis.
$ dotnet sonarscanner begin /k:"project-key" 
Build:::
Between the begin and end steps, you need to build your project, execute tests and generate code coverage data. 
$ dotnet build <path to solution.sln>
End
The end step is executed when you add the "end" command line argument. It cleans the MSBuild hooks, collects the analysis data generated by the build, the test results, the code coverage and then uploads everything to SonarQube.
$ dotnet sonarscanner end 
Syntax: Use Maven Command line to publish reports to SonarQube
****project containing pom.xml file and type:
mvn clean install sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.analysis.mode=publish

----------------------------
Nuget
package ext
how to link external 

IIS 
26)Install IIS in vm, execute the below command in powershell
Install-WindowsFeature -Name web-server -IncludeManagementTools
Install-WindowsFeature -Name web-server -IncludeAllSubFeature

LoadBalancer
ASP project dependency
GIT vs GITHUB


Maven

Visual Studio version Stable release: 2019 version 16.6.0
.NET Framework 4.8
.NET Core 3.1

How will you check the errors when you app is not deployed properly. 500 error
common error during cicd pipeline
Few troubleshooting activities
why you uses s3 bucket instead of Artifacts
